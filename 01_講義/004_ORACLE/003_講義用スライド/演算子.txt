-- 商品テーブルを作成
CREATE TABLE item(
    item_id CHAR(4) PRIMARY KEY,
    item_name VARCHAR2(100) NOT NULL,
    category_id NUMBER NOT NULL,
    sel_price NUMBER,
    pur_price NUMBER,
    reg_date DATE
);

-- レコードの挿入
INSERT INTO item VALUES ('0001', 'シャツ', 1, 1000, 500, '2009-09-20');
INSERT INTO item VALUES ('0002', 'ホッチキス', 2, 500, 320, '2009-09-11');
INSERT INTO item VALUES ('0003', 'セーター', 1, 4000, 2800, NULL);
INSERT INTO item VALUES ('0004', '包丁', 3, 3000, 2800, '2009-09-20');
INSERT INTO item VALUES ('0005', 'フライパン', 3, 5000, 2800, '2009-01-15');
INSERT INTO item VALUES ('0006', 'フォーク', 3, NULL, 2800, '2009-09-20');
INSERT INTO item VALUES ('0007', 'スプーン', 3, 790, 2800, '2008-04-28');
INSERT INTO item VALUES ('0008', 'ボールペン', 2, NULL, 2800, '2009-11-11');

INSERT INTO item VALUES ('0009', '%ボールペン', 2, NULL, 2800, '2009-11-11');
COMMIT;

SELECT * FROM item;
SELECT * FROM item WHERE sel_price = NULL;
SELECT * FROM item WHERE sel_price <> NULL;
SELECT * FROM item WHERE sel_price IS NULL;
SELECT * FROM item WHERE sel_price IS NOT NULL;

SELECT item_name, sel_price FROM item
    WHERE 
    category_id = 3 AND sel_price >= 3000;

SELECT item_name, sel_price FROM item
    WHERE 
    category_id = 3 OR sel_price >= 3000;

SELECT item_name, category_id, sel_price
    FROM item
    WHERE NOT sel_price >= 1000;

-- ハイフンを含む    
SELECT item_name FROM item WHERE item_name LIKE '%ー%';
-- ハイフンで終わる
SELECT item_name FROM item WHERE item_name LIKE '%ー';
-- 二文字目がハイフン
SELECT item_name FROM item WHERE item_name LIKE '_ー%';
-- %を含む文字
SELECT item_name FROM item WHERE item_name LIKE '%!%%' ESCAPE '!';
-- ハイフンを含まない
SELECT item_name FROM item WHERE item_name NOT LIKE '%ー%';

-- BETWEEN ・・・可読性と処理速度の向上が見込める
SELECT item_name, sel_price, reg_date
    FROM item
    WHERE reg_date BETWEEN '2008-04-28' AND '2009-09-11';

-- 不等号を使う書式
SELECT item_name, sel_price, reg_date
    FROM item
    WHERE reg_date >= '2008-04-28' AND reg_date <= '2009-09-11';

SELECT item_name, sel_price, TO_CHAR(reg_date,'YYYY/MM/DD')
    FROM item
    WHERE reg_date BETWEEN TO_DATE('2008/04/28') AND TO_DATE('2009/09/11');
    
-- IN句
SELECT item_name, sel_price FROM item WHERE sel_price IN (500,790,1000);
-- ORを使うより楽！
SELECT item_name, sel_price FROM item WHERE sel_price = 500 OR sel_price = 790 OR sel_price = 1000;

----------------------------------
--集約
----------------------------------
SELECT * FROM item;

-- 件数を取得する
SELECT COUNT(*) FROM item;
SELECT COUNT(*) FROM item WHERE category_id = 3 ;
SELECT COUNT(sel_price) FROM item WHERE category_id = 3 ;

-- 平均値の取得
SELECT * FROM item;
SELECT ROUND(AVG(sel_price),1) FROM item;

-- 合計値の計算
SELECT * FROM item;
SELECT SUM(sel_price) FROM item;
-- 最大値/最小値の取得
SELECT MAX(sel_price), MIN(sel_price) FROM item;

-- GroupBy
SELECT * FROM item;
SELECT category_id, COUNT(*)
FROM item
GROUP BY category_id;

SELECT
    pur_price,
    COUNT(*)
    FROM item
    -- ①where句で絞り込まれる
    WHERE category_id = 1
    -- ②GROUP BY句でグルーピングされる
    GROUP BY pur_price
    ;

-- SQLの評価準
/*
【SQLの記述順序】
 1. select句 ⇒ 列(カラム)情報を指定
 2. from句 ⇒ テーブル情報を取得
 3. join句 ⇒ 複数テーブルの結合処理
 4. where句 ⇒ 絞り込み条件の指定
 5. group by句 ⇒ グループ条件の指定
 6. having句 ⇒ グループ化後の絞り込み条件の指定
 7. order by句 ⇒ ソート順の指定

【SQLの実行順序】
 1. from句 ⇒ テーブル情報を取得
 2. join句 ⇒ 複数テーブルの結合処理
 3. where句 ⇒ 絞り込み条件の指定
 4. group by句 ⇒ グループ条件の指定
 5. having句 ⇒ グループ化後の絞り込み条件の指定
 6. select句 ⇒ 列(カラム)情報を指定
 7. order by句 ⇒ ソート順の指定
 */
 
 --サブクエリ：
 SELECT * FROM item 
    ORDER BY sel_price
    ;
SELECT * FROM item 
    WHERE ROWNUM <= 3
    ORDER BY sel_price
    ;
SELECT * FROM (SELECT * FROM item ORDER BY item.sel_price) 
    WHERE ROWNUM <= 3
    ;