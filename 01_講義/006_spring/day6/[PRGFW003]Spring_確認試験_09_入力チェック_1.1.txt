■入力チェック
1.
Spring Frameworkでの入力チェックに関する説明として、正しいものはどれか。

1. 入力チェックを行う際には、エンティティの各フィールドに入力チェック処理を記述する。
2. 入力チェック処理はアノテーションで指定できる。
3. 未入力チェックは自動的に実行されるため、ソースコード中に記述する必要はない。
4. 1つの入力項目に対して実行される入力チェックは1種類のみである。

正答：2
解説：
『Spring Framework』第10章/入力チェックの実装

Formクラスのフィールドにアノテーションを付与することで、対応する入力項目に対する入力チェックを実行できます。また、1つのフィールドに対して複数個のアノテーションを付与することで、1つの入力項目に対して複数種類の入力チェックを行うことも可能です。
したがって、選択肢2が正解です。


■入力チェック
2.
以下のソースコードは、アノテーションを用いた入力チェックを行うメソッド記述の一部分である。
記述の中にある、アノテーションや引数に関する説明として「誤っているもの」はどれか。

public String loginWithValidation(@Valid @ModelAttribute LoginFormWithValidation form, BindingResult result, HttpSession session)

1.@Validは、Formクラス型のFormクラスの各フィールドに代入された入力値に対して入力チェックを行うために使用する。
2.@Validは、メソッドが呼ばれたタイミングで、入力チェック対象のフィールドすべてに対してチェック処理を実行する。
3.@ModelAttributeは、Formクラスのオブジェクトをセッションスコープに保存するために使用する。
4.BindingResultは、入力チェックの判定結果を取得するために使用する。

正答：3
解説：
『Spring Framework』第10章/入力チェックの実装/ビューの作成
@ModelAttributeは、Formクラスのオブジェクトをリクエストスコープに保存するために使用します。
なお、入力チェックを行うメソッドに引数を指定する際には、Formクラスの指定の直後にBindingResultを指定する必要があります。この順番を守らない場合、処理が正常に実行されないので注意しましょう。


■入力チェック
3. 
ビューに記述した「th:errors」はどのような処理を実行するか。正しいものを選べ。

1. 入力チェックが実行されなかった旨を出力する。
2. 入力チェックの結果として、エラー件数が0件だった旨を出力する。
3. 入力チェックの結果として、エラーメッセージを出力する。
4. 入力チェックを実行すべきかを判別する情報を出力する。

正答：3
解説：
『Spring Framework』第10章/入力チェックの実装/ビューの作成

th:errors属性を記述することで、エラーメッセージを出力できます。この属性の値に「*{<Formクラスのフィールド名>}」という形式で記述することで、対象のFormクラス中のフィールドに対するエラーメッセージが出力されます。
したがって、選択肢3が正解です。


