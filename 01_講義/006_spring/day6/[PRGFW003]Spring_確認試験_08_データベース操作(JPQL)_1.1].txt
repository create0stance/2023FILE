■JPQL
1.
JPQLを使用するメリットとして、正しいものはどれか。

1. 主キー検索ができる。
2. 複雑なCRUD処理を実行できる。
3. 検索結果が自動的にソートされる。
4. エンティティとリポジトリを作成せずにCRUD処理が実行できる。

正答：2
解説：
『Spring Framework』第8章/JPQLの概要
JPQLを使用することで、JPA Repositoryが提供しているメソッドでは対応できない複雑なCRUD処理を、特殊な構文で実行できます。
したがって、選択肢2が正解です。


■JPQL
2.
JPQLの記述方法として、誤っているものはどれか。

1. FROM句にはエンティティの名前を指定する。
2. SELECT句に「*」を記述すると、SELECT文により全ての列の値を取得できる。
3. WHERE句にはエンティティのフィールド名を指定する。
4. エンティティを指定する際に、エンティティに対する別名も付ける必要がある。

正答：2
解説：
『Spring Framework』第8章/JPQLの概要

SELECT文により全ての列の値を取得したい場合、SELECT句では「＊(アスタリスク)」ではなくエンティティの別名を記述してください。
したがって、選択肢2が正解です。

■JPQL
3.
@NamedQueryアノテーションを利用したメソッドを定義できるのは、どのクラスか。

1. コントローラ
2. エンティティ
3. Formクラス
4. リポジトリ

正答：2
解説：
『Spring Framework』第8章/@NamedQueryを利用したJPQL

@NamedQueryアノテーションを利用したメソッドはエンティティ内に定義します。それに対して、@Queryアノテーションはリポジトリー内に記述します。混同しないように気を付けましょう。
したがって、選択肢4が正解です。


■JPQL
4.
@Queryアノテーションを利用したメソッドを定義できるのは、どのクラスか。

1. コントローラ
2. エンティティ
3. Formクラス
4. リポジトリ

正答：4
解説：
『Spring Framework』第8章/@Queryを利用したJPQL

@Queryアノテーションを利用したメソッドはリポジトリ内に定義します。それに対して、@NamedQueryアノテーションはエンティティ内に記述します。混同しないように気を付けましょう。
したがって、選択肢4が正解です。

