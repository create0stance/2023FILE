■Day8復習クラス：staticメンバ、コンストラクタ
-----------------------------------------------------------------------------------
概要：step2パッケージ内のクラスを利用し、実装・修正してください。
★前回の復習問題で、実装したコードに以下の修正指示がありました。
１）クラスに関連づいた処理や変数を、staticメンバに修正（一部修正済）
２）Characterオブジェクトの生成はコンストラクタを活用

★出来れば、追加実装も！
３）前任者が途中まで実装していた「BattleManegerクラス」が見つかりました。
	2人のキャラクターがバトルする際の処理を考え実装してください。
★実行例は当ファイル最下部です。※同じ内容のバトル処理じゃなくても良いです！
-----------------------------------------------------------------------------------
詳細：staticメンバ
-----------------------------------------------------------------------------------
キャラクター生成時の基礎体力及び基礎攻撃力の計算処理をメソッドで切り分けせよ。
1_1）基礎体力及び基礎攻撃力の計算処理をstaticメソッドとして実装せよ。
また、「性別により計算処理が異なる」仕様へと変更となったため、処理を追加せよ。

①	メソッド名	：calcBaseHpAtCreateObj
	種別		：	staticメソッド
	内容		：	キャラクター作成時にセットする基礎体力値を計算しリターン。
	詳細		：	設定値 = 「1000～5000」のランダム値。
					※男性キャラの場合、ランダム値を1.5倍する。例）ランダム値5000の場合、7500をリターン。
	引数		：	int gender
	戻り値		：	int キャラクター作成時の基礎体力値
	
②	メソッド名	：calcBaseAtackPowerAtCreateObj
	内容		：	キャラクター作成時にセットする基礎攻撃力値を計算しリターン。
	詳細		：	設定値 = 「100～1000」のランダム値。
					※女性キャラの場合、ランダム値を2倍する。例）ランダム値1000の場合、2000をリターン。
	引数		：	int gender
	戻り値		：	int キャラクター作成時の基礎攻撃力値
	
③Characterクラスから不要となった引数なしのsetBaseHpメソッド及びsetBaseAtackPowerメソッドを削除せよ。
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
【補足】
・セットする値の計算は、オブジェクト固有の処理じゃないから、staticメソッドにしてみよう！
・同じフィールドに対するセッターメソッドの乱立は、混乱の元。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1_2)	Mainメソッドにおけるキャラクター生成後の「基礎体力、基礎攻撃力をセットする処理」について、
		上記で作成したメソッドと引数ありの各セッターを利用する処理に修正せよ。
		例）	player.setBaseHp();
				↓
				int gender = player.getGender();
				int baseHp = Character.calcBaseHpAtCreateObj(gender);
				player.setBaseHp(baseHp);
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿				
補足
・一行で書くと以下になるよ。
player.setBaseHp(Character.calcBaseHpAtCreateObj(player.getGender()));
・オブジェクト生成後のフィールド情報の利用は、特別な意図がない限りgetterを使おう！
× gender
〇	getGender()
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1_3)CharacterクラスgetGendeWithStringメソッド内で使用している配列変数をstatic変数とし宣言しメソッド内で利用する形に修正せよ。
フィールド名		：	genderStrings
フィールドタイプ	：	static
型					：	String[]
初期値			：	{ "未選択", "男性", "女性", "その他" }
補足				：クラス全体に関連する情報は、static変数や定数、情報取得専用のメソッドなどで管理しよう！
-----------------------------------------------------------------------------------
詳細：コンストラクタ
-----------------------------------------------------------------------------------
2_1)Characterクラスにオブジェクト生成時にデフォルト値をセットする以下のコンストラクタを追加せよ。
引数：なし
処理：以下、初期値(デフォルト値)を各フィールドにセット
-------------------------------------------------------------------------------------
フィールド				初期値
-------------------------------------------------------------------------------------
id						1
name				未設定
gender				0
baseHp				0
baseAtackPoint	0
-------------------------------------------------------------------------------------
2_2)Characterクラスに引数を持つ以下のコンストラクタを追加せよ

仮引数名	型			意味
id				int			キャラクターID
name		name	キャラクター名
gender		int			キャラクター性別

処理：
1,引数なしコンストラクタを呼び出し、デフォルト値をセット
2,各フィールドに以下の値をセット
-------------------------------------------------------------------------------------
フィールド名			セットする値
-------------------------------------------------------------------------------------
id						引数idの値
name				引数nameの値
gender				引数genderの値
baseHp				calcBaseHpAtCreateObjメソッドを使用し取得した値
baseAtackPoint	calcBaseBaseAtackPointAtCreateObjメソッドを使用し取得した値
-------------------------------------------------------------------------------------
2_3)Mainクラスにおけるキャラクター作成およびフィールドセットの一連の処理を
引数ありのコンストラクタを呼び出す処理に修正せよ
-------------------------------------------------------------------------------------
2_4)Characterクラスの引数なしのコンストラクタをprivateに修正せよ
補足：外部からは「引数ありのコンストラクタ」しか利用できなくすることで、
必ず「引数ありのコンストラクタを利用したオブジェクトのみ」が生成されるシステムに出来るよ。
-------------------------------------------------------------------------------------
詳細：追加実装
-----------------------------------------------------------------------------------
3_1)BattleManagerクラスcharacterBattleStartメソッドにバトル処理を追加してみよう！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
★実行例：
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(･8･) ＜ プレイヤー1を作成します。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1) プレイヤー名を入力してください。
>みりちゃむ
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
2) 性別を選択してください。
1:男性
2:女性
3:その他
>2
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
Player1「みりちゃむ」を作成しました。
性別は「女性」です。
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(･8･) ＜ プレイヤー2を作成します。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1) プレイヤー名を入力してください。
>佐久間
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
2) 性別を選択してください。
1:男性
2:女性
3:その他
>1
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
Player2「佐久間」を作成しました。
性別は「男性」です。
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(･8･) > 以下のPlayerが作成されました
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
ID：1
プレイヤー名：みりちゃむ
性別：女性
HP：3906
攻撃力：1390
-----------------------------------------
ID：2
プレイヤー名：佐久間
性別：男性
HP：5353
攻撃力：703
-----------------------------------------
(･8･) ＜ バトルを開始しますか？(1:する)
>1
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(U・ᴥ・U) > みりちゃむと、佐久間が、バトルを開始したワン！
　　　　　　 > Enterでバトルは進行するワン！
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
みりちゃむ		攻：1390		HP:3906
佐久間		攻：703		HP:5353
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
next >
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(U・ᴥ・U) > みりちゃむの攻撃だワン
＼／＼／＼／＼／＼／＼／＼／＼／＼／＼
0%の力で攻撃した！
0の攻撃！
佐久間の体力は残り5353！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
next >
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(U・ᴥ・U) > 佐久間の攻撃だワン
＼／＼／＼／＼／＼／＼／＼／＼／＼／＼
56%の力で攻撃した！
395の攻撃！
みりちゃむの体力は残り3511！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
next >
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(U・ᴥ・U) > みりちゃむの攻撃だワン
＼／＼／＼／＼／＼／＼／＼／＼／＼／＼
40%の力で攻撃した！
566の攻撃！
佐久間の体力は残り4787！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
next >
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(U・ᴥ・U) > 佐久間の攻撃だワン
＼／＼／＼／＼／＼／＼／＼／＼／＼／＼
34%の力で攻撃した！
240の攻撃！
みりちゃむの体力は残り3271！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
next >
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
(U・ᴥ・U) > みりちゃむの攻撃だワン
＼／＼／＼／＼／＼／＼／＼／＼／＼／＼
会心の一撃が炸裂！！
（＊｀Д´）＝Э）TДT●）
13900の攻撃！
佐久間の体力は残り0！
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
勝者は、みりちゃむです！