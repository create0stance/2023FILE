//--------------------------------------------------------
// Day7復習クラス:アクセス修飾子 / オーバーロード
//--------------------------------------------------------
// 前任者がシステム作成途中で、移動になりました。
// 後任者として、システムを作成しましょう！
// 完成イメージは、このファイル最下部になります。
// -------------------------------------------------------
// 想定時間:30～40分
// 
-------------------------------------------------------------------------------
①Characterクラスに以下のフィールドとそれぞれのアクセサメソッド(setter/getter)を定義せよ。
-------------------------------------------------------------------------------
型			|フィールド名	|意味			|補足
int			|id				|プレイヤーID	|1以上
String		|name			|名前			|
int			|gender			|性別			|0:未選択 1:男性、2:女性、3:その他
int			|baseHp			|基礎体力		|0～5000
int			|baseAtackPoint	|基礎攻撃力		|0～1000

-------------------------------------------------------------------------------
②Characterクラスの以下setterメソッドに指定範囲外の数値を受け取った場合、初期値が設定されるよう追記せよ。
-------------------------------------------------------------------------------
メソッド名			|指定範囲	|初期値
setId				|1以上		|1
setGender			|0～3		|0
setBaseHp			|0～10000	|0
setBaseAtackPoint	|0～10000	|0

実装例）
	public void setId(int id) {
		if(id > 0) {			
			this.id = id;
		}else {
			this.id = 1;
		}
	}
-------------------------------------------------------------------------------
③ObjReviewクラスのmainメソッド内「③追記」の箇所に、指定の処理を記述せよ
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
④メソッドのオーバーロード
-------------------------------------------------------------------------------
4-1)以下のsetterをオーバーロードせよ
メソッド名			|引数	|処理
setBaseHp			|なし	|1000～5000のランダム値をbaseHpフィールドにセット
setBaseAtackPoint	|なし	|100～1000のランダム値をbaseAtackPointフィールドにセット
【補足】
// 100～1000のランダム値
Random rand = new Random();
int rand =  rand.nextInt(901) + 100;

// 1000～5000のランダム値
Random rand = new Random();
int rand = rand.nextInt(4001) + 1000;

4-2)ObjReviewクラスのmainメソッド内「④追記」の箇所に、指定の処理を記述せよ

-------------------------------------------------------------------------------
⑤メソッド追加
-------------------------------------------------------------------------------
★Characterクラスに以下のメソッドを追加せよ
メソッド名：
	getGendeWithString
引数：なし
戻り値：文字列
処理：genderフィールドにセットされている値に応じ、性別を文字列でリターンする

gender	|リターンする文字列
0		|未選択
1		|男性
2		|女性
3		|その他

★ObjReviewクラスのmainメソッド内内「⑤追記」の箇所に、以下の処理を記述せよ。
以下、内容をコンソールに出力。
なお、「」内の文字列は、入力値により異なるものとする

Player1「ちゃむ」を作成しました。
性別は「女性」です。

-------------------------------------------------------------------------------
⑥メソッド追加
-------------------------------------------------------------------------------
★Characterクラスに以下のメソッドを追加せよ
メソッド名：
	showInfomation
引数：なし
戻り値：なし
処理：以下内容をコンソールに出力する
※各項目の値は、入力値またはランダム値により異なるものとする。

ID：1
プレイヤー名：ちゃむ
性別：女性
HP：1880
攻撃力：335

★ObjReviewクラスのmainメソッド内内「⑥追記」の箇所に、以下の処理を記述せよ。
characters配列を利用し、以下の内容をコンソールに出力せよ。
※各項目の値は、入力値またはランダム値により異なるものとする。

ID：1
プレイヤー名：ちゃむ
性別：女性
HP：1880
攻撃力：335
-----------------------------------------
ID：2
プレイヤー名：たむ
性別：男性
HP：2591
攻撃力：994
-----------------------------------------


以下、実行結果例となります。

(･8･) ＜ プレイヤー1を作成します。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1) プレイヤー名を入力してください。
>ちゃむ
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
2) 性別を選択してください。
1:男性
2:女性
3:その他
>2
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
Player1「ちゃむ」を作成しました。
性別は「女性」です。
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(･8･) ＜ プレイヤー2を作成します。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1) プレイヤー名を入力してください。
>たむ
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
2) 性別を選択してください。
1:男性
2:女性
3:その他
>1
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
Player2「たむ」を作成しました。
性別は「男性」です。
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(･8･) > 以下のPlayerが作成されました
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
ID：1
プレイヤー名：ちゃむ
性別：女性
HP：1880
攻撃力：335
-----------------------------------------
ID：2
プレイヤー名：たむ
性別：男性
HP：2591
攻撃力：994
-----------------------------------------
 */
/*
 性別0～3以外の数値入力時
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
(･8･) ＜ プレイヤー1を作成します。
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
1) プレイヤー名を入力してください。
>ちゃむ
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
2) 性別を選択してください。
1:男性
2:女性
3:その他
>4
￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣
Player1「ちゃむ」を作成しました。
性別は「未選択」です。
